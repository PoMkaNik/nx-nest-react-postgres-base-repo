import { BadRequestException, Logger, ValidationPipe } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import { NestFactory } from '@nestjs/core';

import { ApiModule } from './api.module';
import { setupSwagger } from './config/swagger';

async function bootstrap() {
    const app = await NestFactory.create(ApiModule);

    // –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥–∞
    const configService = app.get(ConfigService);

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–∞–π–ø–æ–≤ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏
    app.useGlobalPipes(
        new ValidationPipe({
            transform: true,
            whitelist: true,
            forbidNonWhitelisted: true,
            exceptionFactory: (errors) => {
                const errorMessages = errors.map((error) => {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ error.constraints
                    if (error.constraints) {
                        return `${error.property} - ${Object.values(error.constraints).join(', ')}`;
                    }
                    // –ï—Å–ª–∏ constraints –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    return `${error.property} –∏–º–µ–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ`;
                });
                return new BadRequestException(errorMessages);
            },
        }),
    );

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Swagger
    setupSwagger(app, configService);

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ—Ñ–∏–∫—Å–∞ API —Å–µ—Ä–≤–∏—Å–∞
    const apiPrefix = configService.getOrThrow<string>('NX_BE_API_CANALIA_SERVICE_PREFIX');
    app.setGlobalPrefix(apiPrefix);

    const port = configService.getOrThrow<string>('NX_BE_API_CANALIA_SERVICE_PORT');

    await app.listen(port);

    Logger.log(`üåéüöÄ API is running on: http://localhost:${port}/${apiPrefix}`);
}

bootstrap();
